# Configurações da aplicação
spring.application.name=customers-ms
server.port=0
# Usar porta interna fixa 8080 com docker compose e fazer o mapeamento via Docker
# server.port=8080

# Configurações do banco de dados
# spring.jpa.generate-ddl=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.datasource.url=jdbc:postgresql://localhost:54320/customers-db
# spring.datasource.username=postgres
# spring.datasource.password=abcd1234
# spring.sql.init.mode=always
# spring.sql.init.data-locations=classpath:data.sql

# Configurações de cliente do Eureka
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
# eureka.instance.instance-id=${spring.application.name}_${random.value}

# Tracing com OLTP e Jaeguer
management.endpoint.health.probes.enabled=true
logging.level.org.springframework.web=INFO
management.tracing.sampling.probability=1.0
tracing.url=http://localhost:4317

# Configurações do Config Server
spring.config.import=optional:configserver:http://localhost:8888
