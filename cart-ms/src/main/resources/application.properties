spring.application.name=cart-ms
server.port=0
# Usar porta interna fixa 8080 com docker compose e fazer o mapeamento via Docker
# server.port=8080

# Configurações de cliente do Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}_${random.value}

# Feign
# feign.circuitbreaker.alphanumeric-ids.enabled=true

# Configurações do Actuator
management.endpoints.web.exposure.include= *
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# CircuitBreaker - Configurações do PaymentMS
# 50% de tolerancia antes de mudar para o modo OPEN
resilience4j.circuitbreaker.instances.payment-ms.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.payment-ms.minimum-number-of-calls=4
resilience4j.circuitbreaker.instances.payment-ms.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.payment-ms.wait-duration-in-open-state=2s
resilience4j.circuitbreaker.instances.payment-ms.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.payment-ms.sliding-window-size=10
resilience4j.circuitbreaker.instances.payment-ms.sliding-window-type=count-based


# Tracing com OLTP e Jaeguer
management.endpoint.health.probes.enabled=true
logging.level.org.springframework.web=INFO
management.tracing.sampling.probability=1.0
tracing.url=http://localhost:4317
# logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]